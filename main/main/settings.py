"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

from dotenv import load_dotenv

load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
LOCAL_TEMP_DIR = BASE_DIR.parent / "localapptempdir"
LOCAL_TEMP_DIR.mkdir(exist_ok=True)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = "django-insecure-uf@_zz3wlldpim)*wpoq=qz@#6=fu2vxq()4@g*qt0^^u+p+ls"
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "api",
    "gmailreader",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "main.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],  # Custom: Consolidates all templates here
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "main.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

MAINDB_ENGINE = os.environ.get("MAINDB_ENGINE", "")
MAINDB_NAME = os.environ.get("MAINDB_NAME", "")
MAINDB_USER = os.environ.get("MAINDB_USER", "")
MAINDB_PASSWORD = os.environ.get("MAINDB_PASSWORD", "")
MAINDB_LOCALHOST = os.environ.get("MAINDB_LOCALHOST", "")
MAINDB_PORT = os.environ.get("MAINDB_PORT", "")

match MAINDB_ENGINE:
    case (
        "django.db.backends.postgresql"
        | "django.db.backends.mysql"
        | "django.db.backends.oracle"
    ):
        DATABASES = {
            "default": {
                "ENGINE": MAINDB_ENGINE,
                "NAME": MAINDB_NAME,
                "USER": MAINDB_USER,
                "PASSWORD": MAINDB_PASSWORD,
                "HOST": MAINDB_LOCALHOST,
                "PORT": MAINDB_PORT,
            }
        }
    case "django.db.backends.sqlite3" if MAINDB_NAME:
        DATABASES = {
            "default": {
                "ENGINE": "django.db.backends.sqlite3",
                "NAME": MAINDB_NAME,
            }
        }
    case _:
        # If MAINDB_CONNX_STR is not set, use the default SQLite database
        DATABASES = {
            "default": {
                "ENGINE": "django.db.backends.sqlite3",
                "NAME": LOCAL_TEMP_DIR / "db.sqlite3",
            }
        }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


MONGODB_NAME = "drf_db"
MONGODB_CONNX_STR = os.environ.get("MONGODB_CONNX_STR")
